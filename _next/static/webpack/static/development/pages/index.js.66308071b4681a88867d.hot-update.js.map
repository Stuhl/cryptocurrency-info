{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.66308071b4681a88867d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react'\r\nimport fetch from \"isomorphic-unfetch\"\r\n\r\n// components\r\nimport Meta from \"../components/Meta\"\r\n\r\n// used together\r\nimport Header from \"../components/Header\"\r\nimport Highlight from \"../components/Highlight\"\r\n\r\nimport InformationBlock from \"../components/InformationBlock\"\r\nimport GeneralInformation from \"../components/GeneralInformation\"\r\nimport InfoBox from \"../components/InfoBox\"\r\n\r\n// used together\r\nimport FunFactGrid from \"../components/FunFactGrid\"\r\nimport FunFactItem from \"../components/FunFactItem\"\r\n\r\nimport Background from \"../components/Background\"\r\n\r\n// 3rd party libs\r\nimport styled from \"styled-components\"\r\nimport {createGlobalStyle} from \"styled-components\"\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-image: linear-gradient(#FF4F98 0%,#0266c8 100%);\r\n    height: 100%;\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst FreeSpace = styled.div`\r\n  height: 50px;\r\n`\r\n\r\nconst Page = (props) => {\r\n  const totalMarketCapWorth = new Intl.NumberFormat(\"en-US\", {style: \"currency\", currency: \"USD\"}).format(props.total_market_cap)\r\n  const priceFor1Bitcoin = new Intl.NumberFormat(\"en-US\", {style: \"currency\", currency: \"USD\"}).format(props.bitcoinPrice)\r\n  return (\r\n    <div>\r\n      <Background />\r\n      <Meta />\r\n      <GlobalStyle />\r\n      <Header>\r\n        HOW FAR HAS <Highlight text=\"CRYPTO\"/> COME?\r\n      </Header>\r\n      <FreeSpace />\r\n      <InfoBox header=\"active cryptocurrencies\" info={props.active_cryptocurrencies} />\r\n      <InfoBox header=\"ongoing ico's\" info={props.ongoing_icos} />\r\n      <InfoBox header=\"upcoming ico's\" info={props.upcoming_icos} />\r\n      <InfoBox header=\"markets to buy cryptocurrencies from\" info={props.markets} />\r\n      <InfoBox header=\"total market cap (worth)\" info={totalMarketCapWorth} />\r\n      <InfoBox header=\"price for 1 bitcoin\" info={priceFor1Bitcoin} />\r\n      <FreeSpace />\r\n      <Header>\r\n        WHAT COULD YOU GET WITH <Highlight text=\"1 BITCOIN\"/>?\r\n      </Header>\r\n      <FreeSpace />\r\n      <FreeSpace />\r\n      <FunFactGrid>\r\n        <FunFactItem header=\"Buy books\" baseValue={props.bitcoinPrice} divider={17.65} round={true}/>\r\n        <FunFactItem header=\"Living by buying the minimum amount of food\" baseValue={props.bitcoinPrice} divider={3.52} round={true} suffix={\"days\"}/>\r\n        <FunFactItem header=\"Watch movies in the theatre\" baseValue={props.bitcoinPrice} divider={8.95} round={true} suffix={\"times\"}/>\r\n        <FunFactItem header=\"Go eating with friends\" baseValue={props.bitcoinPrice} divider={12.75} round={true} suffix={\"times\"}/>\r\n        <FunFactItem header=\"Travel around\" baseValue={props.bitcoinPrice} divider={144} round={true} suffix={\"days\"}/>\r\n        <FunFactItem header=\"Buy videogames\" baseValue={props.bitcoinPrice} divider={50} round={true}/>\r\n        <FunFactItem header=\"Go-karting\" baseValue={props.bitcoinPrice} divider={15} suffix={\"minutes\"}/>\r\n        <FunFactItem header=\"Tesla P100D\" content=\"22x\"/>\r\n        <FunFactItem header=\"Tesla P100D\" content=\"22x\"/>\r\n        <FunFactItem header=\"Tesla P100D\" content=\"22x\"/>\r\n        <FunFactItem header=\"Tesla P100D\" content=\"22x\"/>\r\n        <FunFactItem header=\"Tesla P100D\" content=\"22x\"/>\r\n        <FunFactItem header=\"Tesla P100D\" content=\"22x\"/>\r\n      </FunFactGrid>\r\n    </div>\r\n  )\r\n}\r\n\r\nPage.getInitialProps = async ({req}) => {\r\n  const res = await fetch(\"https://cryptoinfo-backend.herokuapp.com/\")\r\n  const json = await res.json()\r\n  return json\r\n}\r\n\r\nexport default Page\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}